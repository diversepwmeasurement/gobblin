concurrency:
  cancel-in-progress: true
  group: ci-${{ github.event.pull_request.number || github.ref }}
jobs:
  build:
    name: Build repository
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Check out the repo
      uses: actions/checkout@v2
      with:
        persist-credentials: false
    - continue-on-error: true
      name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - continue-on-error: true
      name: Cache Gradle Dependencies
      uses: actions/cache@v2
      with:
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
        path: '~/.gradle/caches

          ~/.gradle/wrapper

          '
        restore-keys: ${{ runner.os }}-gradle
    - continue-on-error: true
      name: Build repository
      run: './gradlew --no-daemon clean build -x test -x rat -x javadoc -x findbugsMain
        -x findbugsTest -x checkstyleMain \

        -x checkstyleJmh -x checkstyleTest -x checkstyleMainGeneratedDataTemplate
        -x checkstyleMainGeneratedRest -Dorg.gradle.parallel=true

        '
    - continue-on-error: true
      name: Verify Dependencies
      run: '# Since dependencies are cached, check after building if they are valid
        or not

        eval ./gradlew --no-daemon assemble -x javadoc -Dorg.gradle.parallel=true

        '
  run_tests:
    env:
      GOBBLIN_GRADLE_OPTS: --no-daemon -Dgobblin.metastore.testing.embeddedMysqlEnabled=false
        -PusePreinstalledMysql=true
    needs: build
    runs-on: self-hosted
    services:
      mysql:
        env:
          MYSQL_DATABASE: test
          MYSQL_PASSWORD: testPassword
          MYSQL_ROOT_PASSWORD: password
          MYSQL_USER: testUser
        image: mysql:5.7.32
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s
          --health-retries=5
        ports:
        - 3306:3306
    steps:
    - continue-on-error: true
      name: Check out the repo
      uses: actions/checkout@v2
      with:
        persist-credentials: false
    - continue-on-error: true
      name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - continue-on-error: true
      name: Add the current IP address, long hostname and short hostname record to
        /etc/hosts file
      run: 'echo -e "$(ip addr show eth0 | grep "inet\b" | awk ''{print $2}'' | cut
        -d/ -f1)\t$(hostname -f) $(hostname -s)" | sudo tee -a /etc/hosts

        '
    - continue-on-error: true
      name: Verify mysql connection
      run: 'sudo apt-get clean

        sudo apt-get --fix-missing update

        sudo apt-get -f install -o Dpkg::Options::="--force-overwrite"

        sudo apt-get purge mysql\*

        sudo rm -rf /var/lib/mysql

        sudo rm -rf /etc/mysql

        sudo dpkg -l | grep -i mysql

        sudo apt-get clean

        sudo apt-get install -y mysql-client

        mysql --host 127.0.0.1 --port 3306 -uroot -ppassword -e "SHOW DATABASES"

        '
    - continue-on-error: true
      name: Cache Gradle Dependencies
      uses: actions/cache@v2
      with:
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
        path: '~/.gradle/caches

          ~/.gradle/wrapper

          '
        restore-keys: ${{ runner.os }}-gradle
    - continue-on-error: true
      name: Run test group ${{ matrix.test-group }}
      run: "./gradlew getGroupedTests -PgroupName=\"${{matrix.test-group}}\" > temp.txt\n\
        TASKS=$(sed -n 's/CI Task: //p' temp.txt)\necho $TASKS\n\nn=0\nuntil [ \"\
        $n\" -ge 3 ]\ndo\n  ./gradlew -PskipTestGroup=disabledOnCI $GOBBLIN_GRADLE_OPTS\
        \ $TASKS -Dorg.gradle.parallel=false && break\n  n=$((n+1))\n  if [[ $n -lt\
        \ 3 ]]; then\n    echo \"Tests failed, retry attempt number $n\"\n  else\n\
        \    exit 1\n  fi\n  sleep 30\ndone\n./gradlew -PskipTestGroup=disabledOnCI\
        \ $GOBBLIN_GRADLE_OPTS -DjacocoBuild=1 jacocoTestReport\n"
    - continue-on-error: true
      name: Collect Jacoco Coverage Reports
      run: 'JACOCO_REPORTS=$(find . -name "jacoco*.xml" -exec printf '',{}'' \; |
        cut -c2- )

        echo "jacoco_reports=$JACOCO_REPORTS" >> $GITHUB_ENV

        '
    - continue-on-error: true
      name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2
      with:
        fail_ci_if_error: false
        files: ${{ env.jacoco_reports }}
        verbose: true
    strategy:
      fail-fast: false
      matrix:
        test-group:
        - Core Tests
        - Service Tests
        - Module Tests
        - Other Tests
    timeout-minutes: 120
  static_checks:
    name: Run static checks
    needs: build
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Check out the repo
      uses: actions/checkout@v2
    - continue-on-error: true
      name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - continue-on-error: true
      name: Cache Gradle Dependencies
      uses: actions/cache@v2
      with:
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
        path: '~/.gradle/caches

          ~/.gradle/wrapper

          '
        restore-keys: ${{ runner.os }}-gradle
    - continue-on-error: true
      name: Run CheckStyle and FindBugs
      run: './gradlew --no-daemon javadoc findbugsMain checkstyleMain checkstyleTest
        checkstyleJmh

        '
name: Build and Run Tests
on:
  repository_dispatch:
    types: trigger-ga___build_and_test.yaml
